 When Explicit Type Conversion Is Required:
 ------------------------------------------
    Concatenating a string with an integer (or performing an operation between incompatible types):
    print("Age: " + str(25))  # You need to convert 25 to a string explicitly
    print(3 + int("2"))       # You need to convert "2" to an integer explicitly
Python doesn't automatically convert between types because this can lead to ambiguity or unintended behavior.

1. Implicit Type Conversion

x = 5    # integer
y = 2.0  # float
z = x + y  # automatically converts x to float for the addition
print(z)   # Output: 7.0
print(type(z))  # Output: <class 'float'>

2. Explicit Type Conversion

    int(): Converts an object into an integer.
    float(): Converts an object into a float.
    str(): Converts an object into a string.
    list(): Converts an object (like a tuple, set) into a list.
    tuple(): Converts an object (like a list, set) into a tuple.
    set(): Converts an object (like a list, tuple) into a set.
    dict(): Converts a list of pairs into a dictionary.
    bool(): Converts a value into a boolean (True or False).

# Integer to String
x = 10
x_str = str(x)

# Float to Integer
y = 5.99
y_int = int(y)
print(y_int, type(y_int))  # Output: 5 <class 'int'>

# List to Tuple
my_list = [1, 2, 3]
my_tuple = tuple(my_list)

# String to Integer
num_str = "123"
num_int = int(num_str)
print(num_int, type(num_int))  # Output: 123 <class 'int'>

# Boolean to Integer
print(int(True))   # Output: 1
print(int(False))  # Output: 0

# Boolean to Float
print(float(True))   # Output: 1.0

# Boolean to String
print(str(False))  # Output: 'False'

4. Converting to List (list())

The list() function converts other iterables (tuples, sets, strings) into a list.

python

# Tuple to List
my_tuple = (1, 2, 3)
print(list(my_tuple))  # Output: [1, 2, 3]

# String to List
print(list("abc"))  # Output: ['a', 'b', 'c']

6. Converting to Set (set())

The set() function converts iterables like lists, tuples, or strings into a set (unique elements).

# List to Set
my_list = [1, 2, 2, 3]
print(set(my_list))  # Output: {1, 2, 3}

# String to Set
print(set("hello"))  # Output: {'h', 'e', 'l', 'o'}
